#include<bits/stdc++.h>
using namespace std;

// Problem: Given an integer `k`, find the k-th character in a string generated by a specific pattern.
// Approach: The string is generated by starting with "a" and appending characters that are the next character in the alphabet, 
//           wrapping around after 'z'. The k-th character can be found by generating the string until its length is at least `k` 
//           and then returning the character at index `k-1`. dp = new_dp;

// Steps:
// 1. Start with the string "a".
// 2. Continuously append the next character in the alphabet to the string until its length is at least `k`.
// 3. Return the character at index `k-1` of the generated string.
// 4. The next character is determined by taking the current character, incrementing it, and wrapping around if it exceeds 'z'.
// 5. The process continues until the string is long enough to contain the k-th character.
// 6. The function returns the k-th character as the result.

// Time Complexity: O(k), where k is the input integer.
// Space Complexity: O(k), for storing the generated string.


class Solution {
public:
    char kthCharacter(int k) {
        std::string sb = "a";
        while (sb.length() < k) {
            int size = sb.length();
            for (int i = 0; i < size; ++i) {
                char nextChar = 'a' + ((sb[i] - 'a' + 1) % 26);
                sb += nextChar;
            }
        }
        return sb[k - 1];
    }
};